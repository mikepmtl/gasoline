<?php namespace Gasoline\Orm;

/**
 * Part of the Gasoline framework
 *
 * @package     Gasoline
 * @version     1.0-dev
 * @author      Gasoline Development Teams
 * @license     MIT License
 * @copyright   2013 Gasoline Development Team
 * @link        http://hubspace.github.io/gasoline
 */

Class Observer_Id extends \Orm\Observer {
    
    /**
     * Default length for autogenerated ID
     * 
     * @access  public
     * @static
     * @var     integer
     */
    public static $length = 8;
    
    /**
     * Default type to use for the ID
     * 
     * @access  public
     * @static
     * @var     string
     */
    public static $type = 'numeric';
    
    /**
     * Default property to set as the ID
     * 
     * @access  public
     * @static
     * @var     string
     */
    public static $property = 'id';
    
    /**
     * Final length for autogenerated ID
     * 
     * @access  protected
     * @var     integer
     */
    protected $_length;
    
    /**
     * Final type to use for the ID
     * 
     * @access  public
     * @var     string
     */
    protected $_type;
    
    /**
     * Final property to set as the ID
     * 
     * @access  public
     * @var     string
     */
    protected $_property = 'id';
    
    
    
    
    
    /**
     * Set the properties for this observer instance, based on the parent model's
     * configuration or the defined defaults.
     *
     * @param  string  Model class this observer is called on
     */
    public function __construct($class)
    {
        $props = $class::observers(get_class($this));
        $this->_length      = isset($props['length']) ? $props['length'] : static::$length;
        $this->_type        = isset($props['type']) ? $props['type'] : static::$type;
        $this->_property    = isset($props['property']) ? $props['property'] : static::$property;
    }
    
    
    //--------------------------------------------------------------------------
    
    /**
     * Creates a unique ID and adds it to the object
     *
     * @param  Model  Model object subject of this observer method
     */
    public function before_insert(\Orm\Model $mdl)
    {
        do
        {
            // Create an ID
            $id = str_pad(\Str::random($this->_type, $this->_length), $this->_length, "0");
        }
        // See if it exists
        while ( $mdl::query()->where($this->_property, '=', $id)->get() );
        
        // Get the model's primary key field name
        // And store the generated ID as the model's primary key
        $mdl->{$this->_property} = $id;
    }
    
}
